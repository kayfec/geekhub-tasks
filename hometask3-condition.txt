Написати систему обміну повідомленнями яка включатиме в себе три типи обьектів: історія чату, повідомлення та юзер.
Об'екти кожного типу повинені створюватися за допомогою функцій-конструкторів. Функції-конструктори повинні бути
доступні в глобальному скоупі (і тільки вони), перед додаванням конструкторів у глобальний скоуп потрібно
перевірити чи нічого у скоупі ще немає під тими ж назвами, якщо є то згенерувати помилку з допомогою throw.
Також змінити дескриптор конструкторів у глобальному скоупі таким чином щоб іх не можна було перезаписати,
а при спробі перезаписати також генерувати помилку.

Конструктор історії чату:
• Повинен мати один статичний метод котрий повертатиме масив створених чатів.
• При створенні чату приймати потрібно один аргумент - ім'я чату, якщо його не передано то генерувати помилку.
• інстанс чату повинен мати метод для підключення юзера до цього чату. Відповідно метод повинен приймати тільки
інстанс юзера, але необмежену кількість (arguments).
• інстанс чату повинен мати відповідний метод для відключення юзера. Метод аналогічний методу підключення.
• інстанс чату повинен мати метод для відправки повідомлення:
• два агрументи: перший - інстанс юзера що відправляє повідомлення, другий - рядок із текстом повідомлення;
• метод повинен створювати новий інстанс повідомлення і додавати його в історію
• метод повинен повертати створене повідомлення
• відправка повинна здійснюватися тільки при умові що юзер підключений до чату, інакше генерувати помилку.
• істатнс чату повинен мати метод котрий виводить в лог історію чату. Приймати до двох аргументів: якщо вказано
два аргументи то першим буде індекс повідомлення в істоїї з якого почати вивід, а другим кількість повідомлень;
Якщо вказано тільки один аргумент то він означатиме кількість повідомлень що потрібно вивести починаючи з
нульового повідомлення; якщо жодного агрументу - вивести перших 10 повідомлень. З приводу формату виведення
в лог: спершу в квадратних дужках ім'я юзера, потім у фігурних дужках !!!статус чи підключений!!! зараз юзер до
чату, потім теж в квадратних дужках час відправлення повідомлення (тільки години, хвилини, секунди та
мілісекунди), потім двокрапка і саме повідомлення.
• інстанс чату повинен мати метод що приймає одного юзера та повертає список не прочитаних повідомлень,
при цьому повідомлення відмічаються як прочитані. Якщо передано другий аргумент (тип чистоло) то повертати
і відмічати як прочитані відповідну кількість непрочитаних повідомлень починаючи із найстарішого.

Конструктор повідомлення:
• при створенні інстаннся конструктор повинен приймати два аргументи - юзера так рядок із повідомленням,
якщо чогось не вистачає то генерувати помилку.
• Інстанс повідомлення повинен мати у пропертях інформацію про те коли він було створений, ким був створений,
інформацію про те яким юзером повідомлення було прочитане (адже в чаті може бути кілька юзерів одночасно).
• Інстанс повинен мати метод для того щоб відмічати яким юзером воно було прочитане.

Конструктор Юзера:
• При створенні конструктор повинен приймати один обовязковий аргумент - ім'я юзера.
• Інстанс повинен мати метод котрий встановлюватиме преданий в аргументах інстанс чату в якості дефолтного.
• Інстанс повинен мати метод котрий підключатиме юзера до чату переданого в якості аргументу (або до дефолтного
якщо в аргументах нічого не вказано).
• інстанс повинен мати метод відключення від чату. Поведінка аналогічна методу підключення.
• Інстанс повинен мати метод відправки повідомлення (другий аргумент якщо їх два, перший аргумент якщо він
тільки один,тип - рякок)  у вказаний чат (перший агрумент якщо їх два) або у дефолтний чат (якщо аргументів 
тільки один).
• Інстанс повинен мати метод котрий читає непрочитані повідомлення (тобто виводить їх в лог в тому ж форматі 
що й при виведенні історіі чату). Якщо вказано два аргументи то це чат та кількість повідомлень які потрібно
прочитати. Якщо вказано тільки один аргумент то діяти відповідно до типу значення: якщо це чат то читати
останні 10 повідомлень, якщо це число то читати відповідну кількість повідомлень із дефолтного чату.

